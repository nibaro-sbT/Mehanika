package start;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.util.Random;
import java.util.Vector;

import javax.swing.JFrame;

import cityObjects.Bloc;


public class Main extends JFrame{

	Vector<Bloc> Bloks = new Vector<Bloc>();
	
	private final int GAME_SPEED = 20;
	private static final long serialVersionUID = 1L;

	Main(){
		setTitle("nigga");
		
		/////////////////////////////////////
		Random r = new Random();
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		Bloks.add(new Bloc(6,new Color(r.nextInt())));
		
		//////////////////////////////////////

		
		setSize(200,200);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}


	
	public static void main(String[] args) {
		System.out.println("sup world");
		Main m = new Main();
		m.setVisible(true);
		m.run();
	}
	
	private void run() {
		long timeran = 0;
		while(true){
			long currentTime = System.currentTimeMillis();
			if(currentTime % (1000/GAME_SPEED) == 1 && timeran!=currentTime) {
				render();
				//repaint();
				//System.out.println(currentTime);
				timeran = currentTime;
			}
		}
	}

	public void render(){
		BufferStrategy bs = getBufferStrategy();
		if(bs==null) {
			createBufferStrategy(3);
			return;
		}
		Graphics g = bs.getDrawGraphics();

		for(int i = 0;i<Bloks.size();i++) {
			g.setColor(Bloks.get(i).getTileCololr());
			g.fillRect((i%3)*320, (i/3)*320, 320, 320);
		}
		
		
		
		
		
		g.dispose();
		bs.show();
	}
	
	@Override
	public void paint(Graphics g) {}
	
	
}
